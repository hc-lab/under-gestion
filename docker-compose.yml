version: "3.8"

services:
  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=almacen.settings
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - CORS_ALLOW_CREDENTIALS=true
      - DEBUG=1
      - POSTGRES_DB=${POSTGRES_DB:-almacen} # Valor por defecto: 'almacen'
      - POSTGRES_USER=${POSTGRES_USER:-hitt} # Valor por defecto: 'hitt'
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1234} # Valor por defecto: '1234'
      - POSTGRES_HOST=${POSTGRES_HOST:-db} # Valor por defecto: 'db'
      - POSTGRES_PORT=${POSTGRES_PORT:-5432} # Valor por defecto: '5432'
      - DATABASE_URL=${DATABASE_URL:-postgres://hitt:1234@db:5432/almacen} # URL de conexi√≥n a la base de datos
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-almacen} # Valor por defecto: 'almacen'
      - POSTGRES_USER=${POSTGRES_USER:-hitt} # Valor por defecto: 'hitt'
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1234} # Valor por defecto: '1234'
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hitt}" ] # Chequeo de salud
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
