services:
  backend:
    build: ./backend
    container_name: backend
    command: /entrypoint.sh
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=almacen.settings
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - CORS_ALLOW_CREDENTIALS=true
      - DEBUG=1
      - POSTGRES_DB=${POSTGRES_DB:-almacen}
      - POSTGRES_USER=${POSTGRES_USER:-hitt}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1234}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DATABASE_URL=${DATABASE_URL:-postgres://hitt:1234@db:5432/almacen}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-hitt}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-1234}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - mynetwork

  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app/frontend
      - frontend_node_modules:/app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - CI=true
    depends_on:
      - backend
    networks:
      - mynetwork

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-almacen}
      - POSTGRES_USER=${POSTGRES_USER:-hitt}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1234}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hitt}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6378:6379"  # Cambiar puerto host a 6378
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  postgres_data:
  frontend_node_modules:
